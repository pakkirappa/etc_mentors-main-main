name: Security and Dependency Monitoring

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch: # Allow manual triggering

jobs:
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Install backend dependencies
        working-directory: ./examhub-backend
        run: npm ci

      - name: Frontend security audit
        run: |
          echo "## Frontend Security Audit" >> security-report.md
          npm audit --json > frontend-audit.json || true
          if [ -s frontend-audit.json ]; then
            echo "### Vulnerabilities Found:" >> security-report.md
            cat frontend-audit.json | jq -r '.vulnerabilities | to_entries[] | "- \(.key): \(.value.severity)"' >> security-report.md
          else
            echo "No vulnerabilities found" >> security-report.md
          fi

      - name: Backend security audit
        working-directory: ./examhub-backend
        run: |
          echo "## Backend Security Audit" >> ../security-report.md
          npm audit --json > backend-audit.json || true
          if [ -s backend-audit.json ]; then
            echo "### Vulnerabilities Found:" >> ../security-report.md
            cat backend-audit.json | jq -r '.vulnerabilities | to_entries[] | "- \(.key): \(.value.severity)"' >> ../security-report.md
          else
            echo "No vulnerabilities found" >> ../security-report.md
          fi

      - name: Check for outdated packages
        run: |
          echo "## Outdated Packages" >> security-report.md
          echo "### Frontend:" >> security-report.md
          npm outdated --json > outdated.json || true
          if [ -s outdated.json ]; then
            cat outdated.json | jq -r 'to_entries[] | "- \(.key): \(.value.current) -> \(.value.latest)"' >> security-report.md
          else
            echo "All packages are up to date" >> security-report.md
          fi

          echo "### Backend:" >> security-report.md
          cd examhub-backend
          npm outdated --json > backend-outdated.json || true
          if [ -s backend-outdated.json ]; then
            cat backend-outdated.json | jq -r 'to_entries[] | "- \(.key): \(.value.current) -> \(.value.latest)"' >> ../security-report.md
          else
            echo "All packages are up to date" >> ../security-report.md
          fi

      - name: Upload security report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: security-report.md

      - name: Create issue if vulnerabilities found
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = 'security-report.md';

            if (fs.existsSync(path)) {
              const report = fs.readFileSync(path, 'utf8');
              
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: 'ðŸ”’ Security Audit Report - Vulnerabilities Found',
                body: `## Security Audit Report
                
                ${report}
                
                Please review and address these security issues.
                
                **Generated automatically by GitHub Actions**`,
                labels: ['security', 'dependencies']
              });
            }
